<?php


/**
 * Skeleton subclass for performing query and update operations on the 'for_migracion' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * 12/07/2013 09:14:16
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.crismoe
 */
class ForMigracionPeer extends BaseForMigracionPeer {
    
    public static function getAllList()
    {
        $c = new Criteria();
        $c->addAscendingOrderByColumn(self::CODIGO);
        return self::doSelect($c);
    }
    public static function getAllTipo()
    {
        $c = new Criteria();
        $c->addGroupByColumn(self::TIPO);
        return self::doSelect($c);
    }
    
    public static function updateTipo($nome, $id)
    {
      $con = Propel::getConnection();
      // select from�
      $c1 = new Criteria();
      $c1->add(self::TIPO, "%".$nome."%", Criteria::LIKE);
      // update set
      $c2 = new Criteria();
      $c2->add(self::TIPO, $id);
      BasePeer::doUpdate($c1, $c2, $con);
    }
    
    public static function updateCaracteristica($nome, $id)
    {
      $con = Propel::getConnection();
      // select from�
      $c1 = new Criteria();
      $c1->add(self::CARACTERISTICA, "%".$nome."%", Criteria::LIKE);
      // update set
      $c2 = new Criteria();
      $c2->add(self::CARACTERISTICA, $id);
      BasePeer::doUpdate($c1, $c2, $con);
    }
    
    public static function updateLinea($nome, $id)
    {
      $con = Propel::getConnection();
      // select from�
      $c1 = new Criteria();
      $c1->add(self::LINEA, "%".$nome."%", Criteria::LIKE);
      // update set
      $c2 = new Criteria();
      $c2->add(self::LINEA, $id);
      BasePeer::doUpdate($c1, $c2, $con);
    }
    
    public static function getAllLineas()
    {
        $c = new Criteria();
        $c->addGroupByColumn(self::LINEA);        
        $c->addAscendingOrderByColumn(self::LINEA);
        return self::doSelect($c);
    }
    
    public static function getAllLineasRelacionTipo()
    {
        $c = new Criteria();
        $c->add(self::LINEA, '', Criteria::NOT_EQUAL);
        $c->addGroupByColumn(self::TIPO);
        $c->addGroupByColumn(self::LINEA);
        $c->addAscendingOrderByColumn(self::LINEA);
        return self::doSelect($c);
    }

    public static function getAllCaracteristicas()
    {
        $c = new Criteria();
        $c->add(self::CARACTERISTICA, '', Criteria::NOT_EQUAL);
        $c->addGroupByColumn(self::CARACTERISTICA);
        return self::doSelect($c);
    }
} // ForMigracionPeer
