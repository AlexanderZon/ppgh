<?php


/**
 * Skeleton subclass for performing query and update operations on the 'solicitud_tipo_i18n' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * 07/08/2013 15:36:09
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.geografia
 */
class SolicitudTipoI18nPeer extends BaseSolicitudTipoI18nPeer {
    
    public static function getNomeSolicitud($id, $lang)
    {
        $c = new Criteria();
        //Eliminamos la columnas de seleccion en caso de que esten definidas
        $c->clearSelectColumns();
        //Se Agregan las Columnas necesarias        
        $c->addSelectColumn(self::NOME_SOLICITUD);
        $c->addSelectColumn(self::DESCRICAO);
        //Filtros
        $c->add(self::ID,$id, Criteria::EQUAL);
        $c->add(self::LANGUAGE,$lang,Criteria::EQUAL);        
        $rs = self::doSelectStmt($c);
        //Se recuperan los registros y se genera arreglo
        while($res = $rs->fetch())
        {
            $dato['nome']           = $res['NOME_SOLICITUD'];
            $dato['des']            = $res['DESCRICAO'];
        }
        if (!empty($dato)){
            return $dato;
        }else{
            return false;
        }
    }
    public static function getLista($lang)
    {
        $c = new Criteria();
        //Eliminamos la columnas de seleccion en caso de que esten definidas
        $c->clearSelectColumns();
        //Se Agregan las Columnas necesarias        
        $c->addSelectColumn(self::ID);
        $c->addSelectColumn(self::NOME_SOLICITUD);
        //Filtros
        $c->add(self::LANGUAGE,$lang,Criteria::EQUAL);        
        $rs = self::doSelectStmt($c);
        //Se recuperan los registros y se genera arreglo
        while($res = $rs->fetch())
        {
            $dato['id']             = $res['ID'];
            $dato['nome']           = $res['NOME_SOLICITUD'];
            $datos[] = $dato;
        }
        if (!empty($datos)){
            return $datos;
        }else{
            return false;
        }
    }

    public static function deleita($id)
    {
        $con = Propel::getConnection();
	// select from...
	$c1 = new Criteria();
        $c1->add(self::ID, $id, Criteria::EQUAL);
	// delete
        BasePeer::doDelete($c1, $con);
    }
    
    public static function getTipoByPermalink($permalink, $lang)
    {
      $c = new Criteria();
      $c->add(self::LANGUAGE, $lang, Criteria::EQUAL);
      $c->add(self::PERMALINK, $permalink, Criteria::EQUAL);
      return self::doSelectOne($c);
    }

} // SolicitudTipoI18nPeer
