<?php

/**
 * Base class that represents a row from the 'solicitud' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * 17/10/2013 16:31:46
 *
 * @package    lib.model.geografia.om
 */
abstract class BaseSolicitud extends BaseObject  implements Persistent {


	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        SolicitudPeer
	 */
	protected static $peer;

	/**
	 * The value for the id_solicitud field.
	 * @var        int
	 */
	protected $id_solicitud;

	/**
	 * The value for the id_solicitud_tipo field.
	 * @var        int
	 */
	protected $id_solicitud_tipo;

	/**
	 * The value for the programa field.
	 * @var        string
	 */
	protected $programa;

	/**
	 * The value for the curso field.
	 * @var        string
	 */
	protected $curso;

	/**
	 * The value for the nome_completo field.
	 * @var        string
	 */
	protected $nome_completo;

	/**
	 * The value for the numero_uso field.
	 * @var        string
	 */
	protected $numero_uso;

	/**
	 * The value for the ministrante field.
	 * @var        string
	 */
	protected $ministrante;

	/**
	 * The value for the orientador field.
	 * @var        string
	 */
	protected $orientador;

	/**
	 * The value for the email field.
	 * @var        string
	 */
	protected $email;

	/**
	 * The value for the motivo_trancamento field.
	 * @var        string
	 */
	protected $motivo_trancamento;

	/**
	 * The value for the nivel field.
	 * @var        string
	 */
	protected $nivel;

	/**
	 * The value for the data_realizacao field.
	 * @var        string
	 */
	protected $data_realizacao;

	/**
	 * The value for the horario field.
	 * @var        string
	 */
	protected $horario;

	/**
	 * The value for the titulo_trabalho field.
	 * @var        string
	 */
	protected $titulo_trabalho;

	/**
	 * The value for the numero_paginas field.
	 * @var        string
	 */
	protected $numero_paginas;

	/**
	 * The value for the sugestao_banca field.
	 * @var        string
	 */
	protected $sugestao_banca;

	/**
	 * The value for the cpf_do_aluno field.
	 * @var        string
	 */
	protected $cpf_do_aluno;

	/**
	 * The value for the titular1 field.
	 * @var        string
	 */
	protected $titular1;

	/**
	 * The value for the institucion1 field.
	 * @var        string
	 */
	protected $institucion1;

	/**
	 * The value for the endereco1 field.
	 * @var        string
	 */
	protected $endereco1;

	/**
	 * The value for the titular2 field.
	 * @var        string
	 */
	protected $titular2;

	/**
	 * The value for the institucion2 field.
	 * @var        string
	 */
	protected $institucion2;

	/**
	 * The value for the endereco2 field.
	 * @var        string
	 */
	protected $endereco2;

	/**
	 * The value for the arq_plano_trabalho field.
	 * @var        string
	 */
	protected $arq_plano_trabalho;

	/**
	 * The value for the arq_justificativa field.
	 * @var        string
	 */
	protected $arq_justificativa;

	/**
	 * The value for the arq_orcamento field.
	 * @var        string
	 */
	protected $arq_orcamento;

	/**
	 * The value for the arq_curriculo_latted field.
	 * @var        string
	 */
	protected $arq_curriculo_latted;

	/**
	 * The value for the arq_pedido_do_interessado field.
	 * @var        string
	 */
	protected $arq_pedido_do_interessado;

	/**
	 * The value for the arq_credenciamento field.
	 * @var        string
	 */
	protected $arq_credenciamento;

	/**
	 * The value for the arq_prof_externo field.
	 * @var        string
	 */
	protected $arq_prof_externo;

	/**
	 * The value for the arq_cadastro_docente_externo field.
	 * @var        string
	 */
	protected $arq_cadastro_docente_externo;

	/**
	 * The value for the arq_carta_aluno field.
	 * @var        string
	 */
	protected $arq_carta_aluno;

	/**
	 * The value for the arq_manifestacao_orientador field.
	 * @var        string
	 */
	protected $arq_manifestacao_orientador;

	/**
	 * The value for the arq_cronograma_actividades field.
	 * @var        string
	 */
	protected $arq_cronograma_actividades;

	/**
	 * The value for the arq_copia_trabalho field.
	 * @var        string
	 */
	protected $arq_copia_trabalho;

	/**
	 * The value for the arq_comprobante field.
	 * @var        string
	 */
	protected $arq_comprobante;

	/**
	 * The value for the arq_transferenca_orientacao field.
	 * @var        string
	 */
	protected $arq_transferenca_orientacao;

	/**
	 * The value for the arq_termo_orientador field.
	 * @var        string
	 */
	protected $arq_termo_orientador;

	/**
	 * The value for the arq_relatorio_qualificacao field.
	 * @var        string
	 */
	protected $arq_relatorio_qualificacao;

	/**
	 * The value for the arq_projeto_pesquisa field.
	 * @var        string
	 */
	protected $arq_projeto_pesquisa;

	/**
	 * The value for the arq_solicitacao_bolsa field.
	 * @var        string
	 */
	protected $arq_solicitacao_bolsa;

	/**
	 * The value for the status field.
	 * @var        string
	 */
	protected $status;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	// symfony behavior
	
	const PEER = 'SolicitudPeer';

	/**
	 * Get the [id_solicitud] column value.
	 * 
	 * @return     int
	 */
	public function getIdSolicitud()
	{
		return $this->id_solicitud;
	}

	/**
	 * Get the [id_solicitud_tipo] column value.
	 * 
	 * @return     int
	 */
	public function getIdSolicitudTipo()
	{
		return $this->id_solicitud_tipo;
	}

	/**
	 * Get the [programa] column value.
	 * 
	 * @return     string
	 */
	public function getPrograma()
	{
		return $this->programa;
	}

	/**
	 * Get the [curso] column value.
	 * 
	 * @return     string
	 */
	public function getCurso()
	{
		return $this->curso;
	}

	/**
	 * Get the [nome_completo] column value.
	 * 
	 * @return     string
	 */
	public function getNomeCompleto()
	{
		return $this->nome_completo;
	}

	/**
	 * Get the [numero_uso] column value.
	 * 
	 * @return     string
	 */
	public function getNumeroUso()
	{
		return $this->numero_uso;
	}

	/**
	 * Get the [ministrante] column value.
	 * 
	 * @return     string
	 */
	public function getMinistrante()
	{
		return $this->ministrante;
	}

	/**
	 * Get the [orientador] column value.
	 * 
	 * @return     string
	 */
	public function getOrientador()
	{
		return $this->orientador;
	}

	/**
	 * Get the [email] column value.
	 * 
	 * @return     string
	 */
	public function getEmail()
	{
		return $this->email;
	}

	/**
	 * Get the [motivo_trancamento] column value.
	 * 
	 * @return     string
	 */
	public function getMotivoTrancamento()
	{
		return $this->motivo_trancamento;
	}

	/**
	 * Get the [nivel] column value.
	 * 
	 * @return     string
	 */
	public function getNivel()
	{
		return $this->nivel;
	}

	/**
	 * Get the [optionally formatted] temporal [data_realizacao] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getDataRealizacao($format = 'Y-m-d')
	{
		if ($this->data_realizacao === null) {
			return null;
		}


		if ($this->data_realizacao === '0000-00-00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->data_realizacao);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->data_realizacao, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [horario] column value.
	 * 
	 * @return     string
	 */
	public function getHorario()
	{
		return $this->horario;
	}

	/**
	 * Get the [titulo_trabalho] column value.
	 * 
	 * @return     string
	 */
	public function getTituloTrabalho()
	{
		return $this->titulo_trabalho;
	}

	/**
	 * Get the [numero_paginas] column value.
	 * 
	 * @return     string
	 */
	public function getNumeroPaginas()
	{
		return $this->numero_paginas;
	}

	/**
	 * Get the [sugestao_banca] column value.
	 * 
	 * @return     string
	 */
	public function getSugestaoBanca()
	{
		return $this->sugestao_banca;
	}

	/**
	 * Get the [cpf_do_aluno] column value.
	 * 
	 * @return     string
	 */
	public function getCpfDoAluno()
	{
		return $this->cpf_do_aluno;
	}

	/**
	 * Get the [titular1] column value.
	 * 
	 * @return     string
	 */
	public function getTitular1()
	{
		return $this->titular1;
	}

	/**
	 * Get the [institucion1] column value.
	 * 
	 * @return     string
	 */
	public function getInstitucion1()
	{
		return $this->institucion1;
	}

	/**
	 * Get the [endereco1] column value.
	 * 
	 * @return     string
	 */
	public function getEndereco1()
	{
		return $this->endereco1;
	}

	/**
	 * Get the [titular2] column value.
	 * 
	 * @return     string
	 */
	public function getTitular2()
	{
		return $this->titular2;
	}

	/**
	 * Get the [institucion2] column value.
	 * 
	 * @return     string
	 */
	public function getInstitucion2()
	{
		return $this->institucion2;
	}

	/**
	 * Get the [endereco2] column value.
	 * 
	 * @return     string
	 */
	public function getEndereco2()
	{
		return $this->endereco2;
	}

	/**
	 * Get the [arq_plano_trabalho] column value.
	 * 
	 * @return     string
	 */
	public function getArqPlanoTrabalho()
	{
		return $this->arq_plano_trabalho;
	}

	/**
	 * Get the [arq_justificativa] column value.
	 * 
	 * @return     string
	 */
	public function getArqJustificativa()
	{
		return $this->arq_justificativa;
	}

	/**
	 * Get the [arq_orcamento] column value.
	 * 
	 * @return     string
	 */
	public function getArqOrcamento()
	{
		return $this->arq_orcamento;
	}

	/**
	 * Get the [arq_curriculo_latted] column value.
	 * 
	 * @return     string
	 */
	public function getArqCurriculoLatted()
	{
		return $this->arq_curriculo_latted;
	}

	/**
	 * Get the [arq_pedido_do_interessado] column value.
	 * 
	 * @return     string
	 */
	public function getArqPedidoDoInteressado()
	{
		return $this->arq_pedido_do_interessado;
	}

	/**
	 * Get the [arq_credenciamento] column value.
	 * 
	 * @return     string
	 */
	public function getArqCredenciamento()
	{
		return $this->arq_credenciamento;
	}

	/**
	 * Get the [arq_prof_externo] column value.
	 * 
	 * @return     string
	 */
	public function getArqProfExterno()
	{
		return $this->arq_prof_externo;
	}

	/**
	 * Get the [arq_cadastro_docente_externo] column value.
	 * 
	 * @return     string
	 */
	public function getArqCadastroDocenteExterno()
	{
		return $this->arq_cadastro_docente_externo;
	}

	/**
	 * Get the [arq_carta_aluno] column value.
	 * 
	 * @return     string
	 */
	public function getArqCartaAluno()
	{
		return $this->arq_carta_aluno;
	}

	/**
	 * Get the [arq_manifestacao_orientador] column value.
	 * 
	 * @return     string
	 */
	public function getArqManifestacaoOrientador()
	{
		return $this->arq_manifestacao_orientador;
	}

	/**
	 * Get the [arq_cronograma_actividades] column value.
	 * 
	 * @return     string
	 */
	public function getArqCronogramaActividades()
	{
		return $this->arq_cronograma_actividades;
	}

	/**
	 * Get the [arq_copia_trabalho] column value.
	 * 
	 * @return     string
	 */
	public function getArqCopiaTrabalho()
	{
		return $this->arq_copia_trabalho;
	}

	/**
	 * Get the [arq_comprobante] column value.
	 * 
	 * @return     string
	 */
	public function getArqComprobante()
	{
		return $this->arq_comprobante;
	}

	/**
	 * Get the [arq_transferenca_orientacao] column value.
	 * 
	 * @return     string
	 */
	public function getArqTransferencaOrientacao()
	{
		return $this->arq_transferenca_orientacao;
	}

	/**
	 * Get the [arq_termo_orientador] column value.
	 * 
	 * @return     string
	 */
	public function getArqTermoOrientador()
	{
		return $this->arq_termo_orientador;
	}

	/**
	 * Get the [arq_relatorio_qualificacao] column value.
	 * 
	 * @return     string
	 */
	public function getArqRelatorioQualificacao()
	{
		return $this->arq_relatorio_qualificacao;
	}

	/**
	 * Get the [arq_projeto_pesquisa] column value.
	 * 
	 * @return     string
	 */
	public function getArqProjetoPesquisa()
	{
		return $this->arq_projeto_pesquisa;
	}

	/**
	 * Get the [arq_solicitacao_bolsa] column value.
	 * 
	 * @return     string
	 */
	public function getArqSolicitacaoBolsa()
	{
		return $this->arq_solicitacao_bolsa;
	}

	/**
	 * Get the [status] column value.
	 * 
	 * @return     string
	 */
	public function getStatus()
	{
		return $this->status;
	}

	/**
	 * Set the value of [id_solicitud] column.
	 * 
	 * @param      int $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setIdSolicitud($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_solicitud !== $v) {
			$this->id_solicitud = $v;
			$this->modifiedColumns[] = SolicitudPeer::ID_SOLICITUD;
		}

		return $this;
	} // setIdSolicitud()

	/**
	 * Set the value of [id_solicitud_tipo] column.
	 * 
	 * @param      int $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setIdSolicitudTipo($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_solicitud_tipo !== $v) {
			$this->id_solicitud_tipo = $v;
			$this->modifiedColumns[] = SolicitudPeer::ID_SOLICITUD_TIPO;
		}

		return $this;
	} // setIdSolicitudTipo()

	/**
	 * Set the value of [programa] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setPrograma($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->programa !== $v) {
			$this->programa = $v;
			$this->modifiedColumns[] = SolicitudPeer::PROGRAMA;
		}

		return $this;
	} // setPrograma()

	/**
	 * Set the value of [curso] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setCurso($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->curso !== $v) {
			$this->curso = $v;
			$this->modifiedColumns[] = SolicitudPeer::CURSO;
		}

		return $this;
	} // setCurso()

	/**
	 * Set the value of [nome_completo] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setNomeCompleto($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->nome_completo !== $v) {
			$this->nome_completo = $v;
			$this->modifiedColumns[] = SolicitudPeer::NOME_COMPLETO;
		}

		return $this;
	} // setNomeCompleto()

	/**
	 * Set the value of [numero_uso] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setNumeroUso($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->numero_uso !== $v) {
			$this->numero_uso = $v;
			$this->modifiedColumns[] = SolicitudPeer::NUMERO_USO;
		}

		return $this;
	} // setNumeroUso()

	/**
	 * Set the value of [ministrante] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setMinistrante($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ministrante !== $v) {
			$this->ministrante = $v;
			$this->modifiedColumns[] = SolicitudPeer::MINISTRANTE;
		}

		return $this;
	} // setMinistrante()

	/**
	 * Set the value of [orientador] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setOrientador($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->orientador !== $v) {
			$this->orientador = $v;
			$this->modifiedColumns[] = SolicitudPeer::ORIENTADOR;
		}

		return $this;
	} // setOrientador()

	/**
	 * Set the value of [email] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->email !== $v) {
			$this->email = $v;
			$this->modifiedColumns[] = SolicitudPeer::EMAIL;
		}

		return $this;
	} // setEmail()

	/**
	 * Set the value of [motivo_trancamento] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setMotivoTrancamento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->motivo_trancamento !== $v) {
			$this->motivo_trancamento = $v;
			$this->modifiedColumns[] = SolicitudPeer::MOTIVO_TRANCAMENTO;
		}

		return $this;
	} // setMotivoTrancamento()

	/**
	 * Set the value of [nivel] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setNivel($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->nivel !== $v) {
			$this->nivel = $v;
			$this->modifiedColumns[] = SolicitudPeer::NIVEL;
		}

		return $this;
	} // setNivel()

	/**
	 * Sets the value of [data_realizacao] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setDataRealizacao($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->data_realizacao !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->data_realizacao !== null && $tmpDt = new DateTime($this->data_realizacao)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->data_realizacao = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = SolicitudPeer::DATA_REALIZACAO;
			}
		} // if either are not null

		return $this;
	} // setDataRealizacao()

	/**
	 * Set the value of [horario] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setHorario($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->horario !== $v) {
			$this->horario = $v;
			$this->modifiedColumns[] = SolicitudPeer::HORARIO;
		}

		return $this;
	} // setHorario()

	/**
	 * Set the value of [titulo_trabalho] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setTituloTrabalho($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->titulo_trabalho !== $v) {
			$this->titulo_trabalho = $v;
			$this->modifiedColumns[] = SolicitudPeer::TITULO_TRABALHO;
		}

		return $this;
	} // setTituloTrabalho()

	/**
	 * Set the value of [numero_paginas] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setNumeroPaginas($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->numero_paginas !== $v) {
			$this->numero_paginas = $v;
			$this->modifiedColumns[] = SolicitudPeer::NUMERO_PAGINAS;
		}

		return $this;
	} // setNumeroPaginas()

	/**
	 * Set the value of [sugestao_banca] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setSugestaoBanca($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->sugestao_banca !== $v) {
			$this->sugestao_banca = $v;
			$this->modifiedColumns[] = SolicitudPeer::SUGESTAO_BANCA;
		}

		return $this;
	} // setSugestaoBanca()

	/**
	 * Set the value of [cpf_do_aluno] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setCpfDoAluno($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cpf_do_aluno !== $v) {
			$this->cpf_do_aluno = $v;
			$this->modifiedColumns[] = SolicitudPeer::CPF_DO_ALUNO;
		}

		return $this;
	} // setCpfDoAluno()

	/**
	 * Set the value of [titular1] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setTitular1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->titular1 !== $v) {
			$this->titular1 = $v;
			$this->modifiedColumns[] = SolicitudPeer::TITULAR1;
		}

		return $this;
	} // setTitular1()

	/**
	 * Set the value of [institucion1] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setInstitucion1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->institucion1 !== $v) {
			$this->institucion1 = $v;
			$this->modifiedColumns[] = SolicitudPeer::INSTITUCION1;
		}

		return $this;
	} // setInstitucion1()

	/**
	 * Set the value of [endereco1] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setEndereco1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->endereco1 !== $v) {
			$this->endereco1 = $v;
			$this->modifiedColumns[] = SolicitudPeer::ENDERECO1;
		}

		return $this;
	} // setEndereco1()

	/**
	 * Set the value of [titular2] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setTitular2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->titular2 !== $v) {
			$this->titular2 = $v;
			$this->modifiedColumns[] = SolicitudPeer::TITULAR2;
		}

		return $this;
	} // setTitular2()

	/**
	 * Set the value of [institucion2] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setInstitucion2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->institucion2 !== $v) {
			$this->institucion2 = $v;
			$this->modifiedColumns[] = SolicitudPeer::INSTITUCION2;
		}

		return $this;
	} // setInstitucion2()

	/**
	 * Set the value of [endereco2] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setEndereco2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->endereco2 !== $v) {
			$this->endereco2 = $v;
			$this->modifiedColumns[] = SolicitudPeer::ENDERECO2;
		}

		return $this;
	} // setEndereco2()

	/**
	 * Set the value of [arq_plano_trabalho] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqPlanoTrabalho($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_plano_trabalho !== $v) {
			$this->arq_plano_trabalho = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_PLANO_TRABALHO;
		}

		return $this;
	} // setArqPlanoTrabalho()

	/**
	 * Set the value of [arq_justificativa] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqJustificativa($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_justificativa !== $v) {
			$this->arq_justificativa = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_JUSTIFICATIVA;
		}

		return $this;
	} // setArqJustificativa()

	/**
	 * Set the value of [arq_orcamento] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqOrcamento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_orcamento !== $v) {
			$this->arq_orcamento = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_ORCAMENTO;
		}

		return $this;
	} // setArqOrcamento()

	/**
	 * Set the value of [arq_curriculo_latted] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqCurriculoLatted($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_curriculo_latted !== $v) {
			$this->arq_curriculo_latted = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_CURRICULO_LATTED;
		}

		return $this;
	} // setArqCurriculoLatted()

	/**
	 * Set the value of [arq_pedido_do_interessado] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqPedidoDoInteressado($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_pedido_do_interessado !== $v) {
			$this->arq_pedido_do_interessado = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_PEDIDO_DO_INTERESSADO;
		}

		return $this;
	} // setArqPedidoDoInteressado()

	/**
	 * Set the value of [arq_credenciamento] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqCredenciamento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_credenciamento !== $v) {
			$this->arq_credenciamento = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_CREDENCIAMENTO;
		}

		return $this;
	} // setArqCredenciamento()

	/**
	 * Set the value of [arq_prof_externo] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqProfExterno($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_prof_externo !== $v) {
			$this->arq_prof_externo = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_PROF_EXTERNO;
		}

		return $this;
	} // setArqProfExterno()

	/**
	 * Set the value of [arq_cadastro_docente_externo] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqCadastroDocenteExterno($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_cadastro_docente_externo !== $v) {
			$this->arq_cadastro_docente_externo = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_CADASTRO_DOCENTE_EXTERNO;
		}

		return $this;
	} // setArqCadastroDocenteExterno()

	/**
	 * Set the value of [arq_carta_aluno] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqCartaAluno($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_carta_aluno !== $v) {
			$this->arq_carta_aluno = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_CARTA_ALUNO;
		}

		return $this;
	} // setArqCartaAluno()

	/**
	 * Set the value of [arq_manifestacao_orientador] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqManifestacaoOrientador($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_manifestacao_orientador !== $v) {
			$this->arq_manifestacao_orientador = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_MANIFESTACAO_ORIENTADOR;
		}

		return $this;
	} // setArqManifestacaoOrientador()

	/**
	 * Set the value of [arq_cronograma_actividades] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqCronogramaActividades($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_cronograma_actividades !== $v) {
			$this->arq_cronograma_actividades = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_CRONOGRAMA_ACTIVIDADES;
		}

		return $this;
	} // setArqCronogramaActividades()

	/**
	 * Set the value of [arq_copia_trabalho] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqCopiaTrabalho($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_copia_trabalho !== $v) {
			$this->arq_copia_trabalho = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_COPIA_TRABALHO;
		}

		return $this;
	} // setArqCopiaTrabalho()

	/**
	 * Set the value of [arq_comprobante] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqComprobante($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_comprobante !== $v) {
			$this->arq_comprobante = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_COMPROBANTE;
		}

		return $this;
	} // setArqComprobante()

	/**
	 * Set the value of [arq_transferenca_orientacao] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqTransferencaOrientacao($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_transferenca_orientacao !== $v) {
			$this->arq_transferenca_orientacao = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_TRANSFERENCA_ORIENTACAO;
		}

		return $this;
	} // setArqTransferencaOrientacao()

	/**
	 * Set the value of [arq_termo_orientador] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqTermoOrientador($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_termo_orientador !== $v) {
			$this->arq_termo_orientador = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_TERMO_ORIENTADOR;
		}

		return $this;
	} // setArqTermoOrientador()

	/**
	 * Set the value of [arq_relatorio_qualificacao] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqRelatorioQualificacao($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_relatorio_qualificacao !== $v) {
			$this->arq_relatorio_qualificacao = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_RELATORIO_QUALIFICACAO;
		}

		return $this;
	} // setArqRelatorioQualificacao()

	/**
	 * Set the value of [arq_projeto_pesquisa] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqProjetoPesquisa($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_projeto_pesquisa !== $v) {
			$this->arq_projeto_pesquisa = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_PROJETO_PESQUISA;
		}

		return $this;
	} // setArqProjetoPesquisa()

	/**
	 * Set the value of [arq_solicitacao_bolsa] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setArqSolicitacaoBolsa($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->arq_solicitacao_bolsa !== $v) {
			$this->arq_solicitacao_bolsa = $v;
			$this->modifiedColumns[] = SolicitudPeer::ARQ_SOLICITACAO_BOLSA;
		}

		return $this;
	} // setArqSolicitacaoBolsa()

	/**
	 * Set the value of [status] column.
	 * 
	 * @param      string $v new value
	 * @return     Solicitud The current object (for fluent API support)
	 */
	public function setStatus($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->status !== $v) {
			$this->status = $v;
			$this->modifiedColumns[] = SolicitudPeer::STATUS;
		}

		return $this;
	} // setStatus()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->id_solicitud = (isset($row[$startcol + 0]) && $row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->id_solicitud_tipo = (isset($row[$startcol + 1]) && $row[$startcol + 1] !== null) ? (int) $row[$startcol + 1] : null;
			$this->programa = (isset($row[$startcol + 2]) && $row[$startcol + 2] !== null) ? (string) $row[$startcol + 2] : null;
			$this->curso = (isset($row[$startcol + 3]) && $row[$startcol + 3] !== null) ? (string) $row[$startcol + 3] : null;
			$this->nome_completo = (isset($row[$startcol + 4]) && $row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->numero_uso = (isset($row[$startcol + 5]) && $row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->ministrante = (isset($row[$startcol + 6]) && $row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->orientador = (isset($row[$startcol + 7]) && $row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->email = (isset($row[$startcol + 8]) && $row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->motivo_trancamento = (isset($row[$startcol + 9]) && $row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->nivel = (isset($row[$startcol + 10]) && $row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->data_realizacao = (isset($row[$startcol + 11]) && $row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->horario = (isset($row[$startcol + 12]) && $row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->titulo_trabalho = (isset($row[$startcol + 13]) && $row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->numero_paginas = (isset($row[$startcol + 14]) && $row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->sugestao_banca = (isset($row[$startcol + 15]) && $row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->cpf_do_aluno = (isset($row[$startcol + 16]) && $row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->titular1 = (isset($row[$startcol + 17]) && $row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->institucion1 = (isset($row[$startcol + 18]) && $row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->endereco1 = (isset($row[$startcol + 19]) && $row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->titular2 = (isset($row[$startcol + 20]) && $row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->institucion2 = (isset($row[$startcol + 21]) && $row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->endereco2 = (isset($row[$startcol + 22]) && $row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->arq_plano_trabalho = (isset($row[$startcol + 23]) && $row[$startcol + 23] !== null) ? (string) $row[$startcol + 23] : null;
			$this->arq_justificativa = (isset($row[$startcol + 24]) && $row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->arq_orcamento = (isset($row[$startcol + 25]) && $row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->arq_curriculo_latted = (isset($row[$startcol + 26]) && $row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->arq_pedido_do_interessado = (isset($row[$startcol + 27]) && $row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->arq_credenciamento = (isset($row[$startcol + 28]) && $row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->arq_prof_externo = (isset($row[$startcol + 29]) && $row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->arq_cadastro_docente_externo = (isset($row[$startcol + 30]) && $row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->arq_carta_aluno = (isset($row[$startcol + 31]) && $row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->arq_manifestacao_orientador = (isset($row[$startcol + 32]) && $row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->arq_cronograma_actividades = (isset($row[$startcol + 33]) && $row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->arq_copia_trabalho = (isset($row[$startcol + 34]) && $row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->arq_comprobante = (isset($row[$startcol + 35]) && $row[$startcol + 35] !== null) ? (string) $row[$startcol + 35] : null;
			$this->arq_transferenca_orientacao = (isset($row[$startcol + 36]) && $row[$startcol + 36] !== null) ? (string) $row[$startcol + 36] : null;
			$this->arq_termo_orientador = (isset($row[$startcol + 37]) && $row[$startcol + 37] !== null) ? (string) $row[$startcol + 37] : null;
			$this->arq_relatorio_qualificacao = (isset($row[$startcol + 38]) && $row[$startcol + 38] !== null) ? (string) $row[$startcol + 38] : null;
			$this->arq_projeto_pesquisa = (isset($row[$startcol + 39]) && $row[$startcol + 39] !== null) ? (string) $row[$startcol + 39] : null;
			$this->arq_solicitacao_bolsa = (isset($row[$startcol + 40]) && $row[$startcol + 40] !== null) ? (string) $row[$startcol + 40] : null;
			$this->status = (isset($row[$startcol + 41]) && $row[$startcol + 41] !== null) ? (string) $row[$startcol + 41] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 42; // 42 = SolicitudPeer::NUM_COLUMNS - SolicitudPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating Solicitud object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(SolicitudPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = SolicitudPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(SolicitudPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$ret = $this->preDelete($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseSolicitud:delete:pre') as $callable)
			{
			  if ($ret = call_user_func($callable, $this, $con))
			  {
			    return;
			  }
			}

			if ($ret) {
				SolicitudPeer::doDelete($this, $con);
				$this->postDelete($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseSolicitud:delete:post') as $callable)
				{
				  call_user_func($callable, $this, $con);
				}

				$this->setDeleted(true);
				$con->commit();
			} else {
				$con->commit();
			}
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(SolicitudPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		$isInsert = $this->isNew();
		try {
			$ret = $this->preSave($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseSolicitud:save:pre') as $callable)
			{
			  if (is_integer($affectedRows = call_user_func($callable, $this, $con)))
			  {
			    return $affectedRows;
			  }
			}

			if ($isInsert) {
				$ret = $ret && $this->preInsert($con);
			} else {
				$ret = $ret && $this->preUpdate($con);
			}
			if ($ret) {
				$affectedRows = $this->doSave($con);
				if ($isInsert) {
					$this->postInsert($con);
				} else {
					$this->postUpdate($con);
				}
				$this->postSave($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseSolicitud:save:post') as $callable)
				{
				  call_user_func($callable, $this, $con, $affectedRows);
				}

				SolicitudPeer::addInstanceToPool($this);
			} else {
				$affectedRows = 0;
			}
			$con->commit();
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			if ($this->isNew() ) {
				$this->modifiedColumns[] = SolicitudPeer::ID_SOLICITUD;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = SolicitudPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setIdSolicitud($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += SolicitudPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			if (($retval = SolicitudPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = SolicitudPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getIdSolicitud();
				break;
			case 1:
				return $this->getIdSolicitudTipo();
				break;
			case 2:
				return $this->getPrograma();
				break;
			case 3:
				return $this->getCurso();
				break;
			case 4:
				return $this->getNomeCompleto();
				break;
			case 5:
				return $this->getNumeroUso();
				break;
			case 6:
				return $this->getMinistrante();
				break;
			case 7:
				return $this->getOrientador();
				break;
			case 8:
				return $this->getEmail();
				break;
			case 9:
				return $this->getMotivoTrancamento();
				break;
			case 10:
				return $this->getNivel();
				break;
			case 11:
				return $this->getDataRealizacao();
				break;
			case 12:
				return $this->getHorario();
				break;
			case 13:
				return $this->getTituloTrabalho();
				break;
			case 14:
				return $this->getNumeroPaginas();
				break;
			case 15:
				return $this->getSugestaoBanca();
				break;
			case 16:
				return $this->getCpfDoAluno();
				break;
			case 17:
				return $this->getTitular1();
				break;
			case 18:
				return $this->getInstitucion1();
				break;
			case 19:
				return $this->getEndereco1();
				break;
			case 20:
				return $this->getTitular2();
				break;
			case 21:
				return $this->getInstitucion2();
				break;
			case 22:
				return $this->getEndereco2();
				break;
			case 23:
				return $this->getArqPlanoTrabalho();
				break;
			case 24:
				return $this->getArqJustificativa();
				break;
			case 25:
				return $this->getArqOrcamento();
				break;
			case 26:
				return $this->getArqCurriculoLatted();
				break;
			case 27:
				return $this->getArqPedidoDoInteressado();
				break;
			case 28:
				return $this->getArqCredenciamento();
				break;
			case 29:
				return $this->getArqProfExterno();
				break;
			case 30:
				return $this->getArqCadastroDocenteExterno();
				break;
			case 31:
				return $this->getArqCartaAluno();
				break;
			case 32:
				return $this->getArqManifestacaoOrientador();
				break;
			case 33:
				return $this->getArqCronogramaActividades();
				break;
			case 34:
				return $this->getArqCopiaTrabalho();
				break;
			case 35:
				return $this->getArqComprobante();
				break;
			case 36:
				return $this->getArqTransferencaOrientacao();
				break;
			case 37:
				return $this->getArqTermoOrientador();
				break;
			case 38:
				return $this->getArqRelatorioQualificacao();
				break;
			case 39:
				return $this->getArqProjetoPesquisa();
				break;
			case 40:
				return $this->getArqSolicitacaoBolsa();
				break;
			case 41:
				return $this->getStatus();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = SolicitudPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getIdSolicitud(),
			$keys[1] => $this->getIdSolicitudTipo(),
			$keys[2] => $this->getPrograma(),
			$keys[3] => $this->getCurso(),
			$keys[4] => $this->getNomeCompleto(),
			$keys[5] => $this->getNumeroUso(),
			$keys[6] => $this->getMinistrante(),
			$keys[7] => $this->getOrientador(),
			$keys[8] => $this->getEmail(),
			$keys[9] => $this->getMotivoTrancamento(),
			$keys[10] => $this->getNivel(),
			$keys[11] => $this->getDataRealizacao(),
			$keys[12] => $this->getHorario(),
			$keys[13] => $this->getTituloTrabalho(),
			$keys[14] => $this->getNumeroPaginas(),
			$keys[15] => $this->getSugestaoBanca(),
			$keys[16] => $this->getCpfDoAluno(),
			$keys[17] => $this->getTitular1(),
			$keys[18] => $this->getInstitucion1(),
			$keys[19] => $this->getEndereco1(),
			$keys[20] => $this->getTitular2(),
			$keys[21] => $this->getInstitucion2(),
			$keys[22] => $this->getEndereco2(),
			$keys[23] => $this->getArqPlanoTrabalho(),
			$keys[24] => $this->getArqJustificativa(),
			$keys[25] => $this->getArqOrcamento(),
			$keys[26] => $this->getArqCurriculoLatted(),
			$keys[27] => $this->getArqPedidoDoInteressado(),
			$keys[28] => $this->getArqCredenciamento(),
			$keys[29] => $this->getArqProfExterno(),
			$keys[30] => $this->getArqCadastroDocenteExterno(),
			$keys[31] => $this->getArqCartaAluno(),
			$keys[32] => $this->getArqManifestacaoOrientador(),
			$keys[33] => $this->getArqCronogramaActividades(),
			$keys[34] => $this->getArqCopiaTrabalho(),
			$keys[35] => $this->getArqComprobante(),
			$keys[36] => $this->getArqTransferencaOrientacao(),
			$keys[37] => $this->getArqTermoOrientador(),
			$keys[38] => $this->getArqRelatorioQualificacao(),
			$keys[39] => $this->getArqProjetoPesquisa(),
			$keys[40] => $this->getArqSolicitacaoBolsa(),
			$keys[41] => $this->getStatus(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = SolicitudPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setIdSolicitud($value);
				break;
			case 1:
				$this->setIdSolicitudTipo($value);
				break;
			case 2:
				$this->setPrograma($value);
				break;
			case 3:
				$this->setCurso($value);
				break;
			case 4:
				$this->setNomeCompleto($value);
				break;
			case 5:
				$this->setNumeroUso($value);
				break;
			case 6:
				$this->setMinistrante($value);
				break;
			case 7:
				$this->setOrientador($value);
				break;
			case 8:
				$this->setEmail($value);
				break;
			case 9:
				$this->setMotivoTrancamento($value);
				break;
			case 10:
				$this->setNivel($value);
				break;
			case 11:
				$this->setDataRealizacao($value);
				break;
			case 12:
				$this->setHorario($value);
				break;
			case 13:
				$this->setTituloTrabalho($value);
				break;
			case 14:
				$this->setNumeroPaginas($value);
				break;
			case 15:
				$this->setSugestaoBanca($value);
				break;
			case 16:
				$this->setCpfDoAluno($value);
				break;
			case 17:
				$this->setTitular1($value);
				break;
			case 18:
				$this->setInstitucion1($value);
				break;
			case 19:
				$this->setEndereco1($value);
				break;
			case 20:
				$this->setTitular2($value);
				break;
			case 21:
				$this->setInstitucion2($value);
				break;
			case 22:
				$this->setEndereco2($value);
				break;
			case 23:
				$this->setArqPlanoTrabalho($value);
				break;
			case 24:
				$this->setArqJustificativa($value);
				break;
			case 25:
				$this->setArqOrcamento($value);
				break;
			case 26:
				$this->setArqCurriculoLatted($value);
				break;
			case 27:
				$this->setArqPedidoDoInteressado($value);
				break;
			case 28:
				$this->setArqCredenciamento($value);
				break;
			case 29:
				$this->setArqProfExterno($value);
				break;
			case 30:
				$this->setArqCadastroDocenteExterno($value);
				break;
			case 31:
				$this->setArqCartaAluno($value);
				break;
			case 32:
				$this->setArqManifestacaoOrientador($value);
				break;
			case 33:
				$this->setArqCronogramaActividades($value);
				break;
			case 34:
				$this->setArqCopiaTrabalho($value);
				break;
			case 35:
				$this->setArqComprobante($value);
				break;
			case 36:
				$this->setArqTransferencaOrientacao($value);
				break;
			case 37:
				$this->setArqTermoOrientador($value);
				break;
			case 38:
				$this->setArqRelatorioQualificacao($value);
				break;
			case 39:
				$this->setArqProjetoPesquisa($value);
				break;
			case 40:
				$this->setArqSolicitacaoBolsa($value);
				break;
			case 41:
				$this->setStatus($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = SolicitudPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setIdSolicitud($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setIdSolicitudTipo($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setPrograma($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setCurso($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setNomeCompleto($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setNumeroUso($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setMinistrante($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setOrientador($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setEmail($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setMotivoTrancamento($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setNivel($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setDataRealizacao($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setHorario($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setTituloTrabalho($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setNumeroPaginas($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setSugestaoBanca($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setCpfDoAluno($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setTitular1($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setInstitucion1($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setEndereco1($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setTitular2($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setInstitucion2($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setEndereco2($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setArqPlanoTrabalho($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setArqJustificativa($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setArqOrcamento($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setArqCurriculoLatted($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setArqPedidoDoInteressado($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setArqCredenciamento($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setArqProfExterno($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setArqCadastroDocenteExterno($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setArqCartaAluno($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setArqManifestacaoOrientador($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setArqCronogramaActividades($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setArqCopiaTrabalho($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setArqComprobante($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setArqTransferencaOrientacao($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setArqTermoOrientador($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setArqRelatorioQualificacao($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setArqProjetoPesquisa($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setArqSolicitacaoBolsa($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setStatus($arr[$keys[41]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(SolicitudPeer::DATABASE_NAME);

		if ($this->isColumnModified(SolicitudPeer::ID_SOLICITUD)) $criteria->add(SolicitudPeer::ID_SOLICITUD, $this->id_solicitud);
		if ($this->isColumnModified(SolicitudPeer::ID_SOLICITUD_TIPO)) $criteria->add(SolicitudPeer::ID_SOLICITUD_TIPO, $this->id_solicitud_tipo);
		if ($this->isColumnModified(SolicitudPeer::PROGRAMA)) $criteria->add(SolicitudPeer::PROGRAMA, $this->programa);
		if ($this->isColumnModified(SolicitudPeer::CURSO)) $criteria->add(SolicitudPeer::CURSO, $this->curso);
		if ($this->isColumnModified(SolicitudPeer::NOME_COMPLETO)) $criteria->add(SolicitudPeer::NOME_COMPLETO, $this->nome_completo);
		if ($this->isColumnModified(SolicitudPeer::NUMERO_USO)) $criteria->add(SolicitudPeer::NUMERO_USO, $this->numero_uso);
		if ($this->isColumnModified(SolicitudPeer::MINISTRANTE)) $criteria->add(SolicitudPeer::MINISTRANTE, $this->ministrante);
		if ($this->isColumnModified(SolicitudPeer::ORIENTADOR)) $criteria->add(SolicitudPeer::ORIENTADOR, $this->orientador);
		if ($this->isColumnModified(SolicitudPeer::EMAIL)) $criteria->add(SolicitudPeer::EMAIL, $this->email);
		if ($this->isColumnModified(SolicitudPeer::MOTIVO_TRANCAMENTO)) $criteria->add(SolicitudPeer::MOTIVO_TRANCAMENTO, $this->motivo_trancamento);
		if ($this->isColumnModified(SolicitudPeer::NIVEL)) $criteria->add(SolicitudPeer::NIVEL, $this->nivel);
		if ($this->isColumnModified(SolicitudPeer::DATA_REALIZACAO)) $criteria->add(SolicitudPeer::DATA_REALIZACAO, $this->data_realizacao);
		if ($this->isColumnModified(SolicitudPeer::HORARIO)) $criteria->add(SolicitudPeer::HORARIO, $this->horario);
		if ($this->isColumnModified(SolicitudPeer::TITULO_TRABALHO)) $criteria->add(SolicitudPeer::TITULO_TRABALHO, $this->titulo_trabalho);
		if ($this->isColumnModified(SolicitudPeer::NUMERO_PAGINAS)) $criteria->add(SolicitudPeer::NUMERO_PAGINAS, $this->numero_paginas);
		if ($this->isColumnModified(SolicitudPeer::SUGESTAO_BANCA)) $criteria->add(SolicitudPeer::SUGESTAO_BANCA, $this->sugestao_banca);
		if ($this->isColumnModified(SolicitudPeer::CPF_DO_ALUNO)) $criteria->add(SolicitudPeer::CPF_DO_ALUNO, $this->cpf_do_aluno);
		if ($this->isColumnModified(SolicitudPeer::TITULAR1)) $criteria->add(SolicitudPeer::TITULAR1, $this->titular1);
		if ($this->isColumnModified(SolicitudPeer::INSTITUCION1)) $criteria->add(SolicitudPeer::INSTITUCION1, $this->institucion1);
		if ($this->isColumnModified(SolicitudPeer::ENDERECO1)) $criteria->add(SolicitudPeer::ENDERECO1, $this->endereco1);
		if ($this->isColumnModified(SolicitudPeer::TITULAR2)) $criteria->add(SolicitudPeer::TITULAR2, $this->titular2);
		if ($this->isColumnModified(SolicitudPeer::INSTITUCION2)) $criteria->add(SolicitudPeer::INSTITUCION2, $this->institucion2);
		if ($this->isColumnModified(SolicitudPeer::ENDERECO2)) $criteria->add(SolicitudPeer::ENDERECO2, $this->endereco2);
		if ($this->isColumnModified(SolicitudPeer::ARQ_PLANO_TRABALHO)) $criteria->add(SolicitudPeer::ARQ_PLANO_TRABALHO, $this->arq_plano_trabalho);
		if ($this->isColumnModified(SolicitudPeer::ARQ_JUSTIFICATIVA)) $criteria->add(SolicitudPeer::ARQ_JUSTIFICATIVA, $this->arq_justificativa);
		if ($this->isColumnModified(SolicitudPeer::ARQ_ORCAMENTO)) $criteria->add(SolicitudPeer::ARQ_ORCAMENTO, $this->arq_orcamento);
		if ($this->isColumnModified(SolicitudPeer::ARQ_CURRICULO_LATTED)) $criteria->add(SolicitudPeer::ARQ_CURRICULO_LATTED, $this->arq_curriculo_latted);
		if ($this->isColumnModified(SolicitudPeer::ARQ_PEDIDO_DO_INTERESSADO)) $criteria->add(SolicitudPeer::ARQ_PEDIDO_DO_INTERESSADO, $this->arq_pedido_do_interessado);
		if ($this->isColumnModified(SolicitudPeer::ARQ_CREDENCIAMENTO)) $criteria->add(SolicitudPeer::ARQ_CREDENCIAMENTO, $this->arq_credenciamento);
		if ($this->isColumnModified(SolicitudPeer::ARQ_PROF_EXTERNO)) $criteria->add(SolicitudPeer::ARQ_PROF_EXTERNO, $this->arq_prof_externo);
		if ($this->isColumnModified(SolicitudPeer::ARQ_CADASTRO_DOCENTE_EXTERNO)) $criteria->add(SolicitudPeer::ARQ_CADASTRO_DOCENTE_EXTERNO, $this->arq_cadastro_docente_externo);
		if ($this->isColumnModified(SolicitudPeer::ARQ_CARTA_ALUNO)) $criteria->add(SolicitudPeer::ARQ_CARTA_ALUNO, $this->arq_carta_aluno);
		if ($this->isColumnModified(SolicitudPeer::ARQ_MANIFESTACAO_ORIENTADOR)) $criteria->add(SolicitudPeer::ARQ_MANIFESTACAO_ORIENTADOR, $this->arq_manifestacao_orientador);
		if ($this->isColumnModified(SolicitudPeer::ARQ_CRONOGRAMA_ACTIVIDADES)) $criteria->add(SolicitudPeer::ARQ_CRONOGRAMA_ACTIVIDADES, $this->arq_cronograma_actividades);
		if ($this->isColumnModified(SolicitudPeer::ARQ_COPIA_TRABALHO)) $criteria->add(SolicitudPeer::ARQ_COPIA_TRABALHO, $this->arq_copia_trabalho);
		if ($this->isColumnModified(SolicitudPeer::ARQ_COMPROBANTE)) $criteria->add(SolicitudPeer::ARQ_COMPROBANTE, $this->arq_comprobante);
		if ($this->isColumnModified(SolicitudPeer::ARQ_TRANSFERENCA_ORIENTACAO)) $criteria->add(SolicitudPeer::ARQ_TRANSFERENCA_ORIENTACAO, $this->arq_transferenca_orientacao);
		if ($this->isColumnModified(SolicitudPeer::ARQ_TERMO_ORIENTADOR)) $criteria->add(SolicitudPeer::ARQ_TERMO_ORIENTADOR, $this->arq_termo_orientador);
		if ($this->isColumnModified(SolicitudPeer::ARQ_RELATORIO_QUALIFICACAO)) $criteria->add(SolicitudPeer::ARQ_RELATORIO_QUALIFICACAO, $this->arq_relatorio_qualificacao);
		if ($this->isColumnModified(SolicitudPeer::ARQ_PROJETO_PESQUISA)) $criteria->add(SolicitudPeer::ARQ_PROJETO_PESQUISA, $this->arq_projeto_pesquisa);
		if ($this->isColumnModified(SolicitudPeer::ARQ_SOLICITACAO_BOLSA)) $criteria->add(SolicitudPeer::ARQ_SOLICITACAO_BOLSA, $this->arq_solicitacao_bolsa);
		if ($this->isColumnModified(SolicitudPeer::STATUS)) $criteria->add(SolicitudPeer::STATUS, $this->status);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(SolicitudPeer::DATABASE_NAME);

		$criteria->add(SolicitudPeer::ID_SOLICITUD, $this->id_solicitud);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getIdSolicitud();
	}

	/**
	 * Generic method to set the primary key (id_solicitud column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setIdSolicitud($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of Solicitud (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setIdSolicitudTipo($this->id_solicitud_tipo);

		$copyObj->setPrograma($this->programa);

		$copyObj->setCurso($this->curso);

		$copyObj->setNomeCompleto($this->nome_completo);

		$copyObj->setNumeroUso($this->numero_uso);

		$copyObj->setMinistrante($this->ministrante);

		$copyObj->setOrientador($this->orientador);

		$copyObj->setEmail($this->email);

		$copyObj->setMotivoTrancamento($this->motivo_trancamento);

		$copyObj->setNivel($this->nivel);

		$copyObj->setDataRealizacao($this->data_realizacao);

		$copyObj->setHorario($this->horario);

		$copyObj->setTituloTrabalho($this->titulo_trabalho);

		$copyObj->setNumeroPaginas($this->numero_paginas);

		$copyObj->setSugestaoBanca($this->sugestao_banca);

		$copyObj->setCpfDoAluno($this->cpf_do_aluno);

		$copyObj->setTitular1($this->titular1);

		$copyObj->setInstitucion1($this->institucion1);

		$copyObj->setEndereco1($this->endereco1);

		$copyObj->setTitular2($this->titular2);

		$copyObj->setInstitucion2($this->institucion2);

		$copyObj->setEndereco2($this->endereco2);

		$copyObj->setArqPlanoTrabalho($this->arq_plano_trabalho);

		$copyObj->setArqJustificativa($this->arq_justificativa);

		$copyObj->setArqOrcamento($this->arq_orcamento);

		$copyObj->setArqCurriculoLatted($this->arq_curriculo_latted);

		$copyObj->setArqPedidoDoInteressado($this->arq_pedido_do_interessado);

		$copyObj->setArqCredenciamento($this->arq_credenciamento);

		$copyObj->setArqProfExterno($this->arq_prof_externo);

		$copyObj->setArqCadastroDocenteExterno($this->arq_cadastro_docente_externo);

		$copyObj->setArqCartaAluno($this->arq_carta_aluno);

		$copyObj->setArqManifestacaoOrientador($this->arq_manifestacao_orientador);

		$copyObj->setArqCronogramaActividades($this->arq_cronograma_actividades);

		$copyObj->setArqCopiaTrabalho($this->arq_copia_trabalho);

		$copyObj->setArqComprobante($this->arq_comprobante);

		$copyObj->setArqTransferencaOrientacao($this->arq_transferenca_orientacao);

		$copyObj->setArqTermoOrientador($this->arq_termo_orientador);

		$copyObj->setArqRelatorioQualificacao($this->arq_relatorio_qualificacao);

		$copyObj->setArqProjetoPesquisa($this->arq_projeto_pesquisa);

		$copyObj->setArqSolicitacaoBolsa($this->arq_solicitacao_bolsa);

		$copyObj->setStatus($this->status);


		$copyObj->setNew(true);

		$copyObj->setIdSolicitud(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     Solicitud Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     SolicitudPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new SolicitudPeer();
		}
		return self::$peer;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

	}

	// symfony_behaviors behavior
	
	/**
	 * Calls methods defined via {@link sfMixer}.
	 */
	public function __call($method, $arguments)
	{
	  if (!$callable = sfMixer::getCallable('BaseSolicitud:'.$method))
	  {
	    throw new sfException(sprintf('Call to undefined method BaseSolicitud::%s', $method));
	  }
	
	  array_unshift($arguments, $this);
	
	  return call_user_func_array($callable, $arguments);
	}

} // BaseSolicitud
