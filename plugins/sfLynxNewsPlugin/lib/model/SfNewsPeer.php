<?php
/**
 * Skeleton subclass for performing query and update operations on the 'sf_news' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Apr 22 10:12:07 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    plugins.sfLynxNewsPlugin.lib.model
 */
class SfNewsPeer extends BaseSfNewsPeer {
  public static function getFilesNews($idNews)
  {
    //Obtengo el idioma principal
    $c = new Criteria();
    //Eliminamos la columnas de seleccion en caso de que esten definidas
    $c->clearSelectColumns();
    //Se Agregan las Columnas necesarias        
    $c->addSelectColumn(SfNewsArchivosPeer::ID_NEWS_ARCHIVO);
    $c->addSelectColumn(SfArchivosSeccionPeer::TITULO_ARCHIVO);
    $c->addSelectColumn(SfArchivosSeccionPeer::ARCHIVO);

    $c->addJoin(SfNewsArchivosPeer::ID_ARCHIVO, SfArchivosSeccionPeer::ID_ARCHIVO_SECCION, Criteria::INNER_JOIN);
    //Filtros
    $c->add(SfNewsArchivosPeer::ID_NEWS,$idNews, Criteria::EQUAL);
    $rs = self::doSelectStmt($c);
    //Se recuperan los registros y se genera arreglo
    while($res = $rs->fetch())
    {
      $dato['id_news_archivo'] = $res['ID_NEWS_ARCHIVO'];
      $dato['archivo'] = $res['TITULO_ARCHIVO'];
      $dato['file'] = $res['ARCHIVO'];
      $datos[] = $dato;
    }

    if (!empty($datos)){
      return $datos;
    }else{
      return false;
    }
  }

  public static function checkFileNews($idNews, $id_file) {
    $c = new Criteria();
    $c->add(SfNewsArchivosPeer::ID_NEWS,$idNews, Criteria::EQUAL);
    $c->add(SfNewsArchivosPeer::ID_ARCHIVO,$id_file, Criteria::EQUAL);
    return self::doCount($c);
  }

  public static function checkFileNoticia($idNews, $id_file) {
    $c = new Criteria();
    $c->add(SfNewsArchivosPeer::ID_NEWS,$idNews, Criteria::EQUAL);
    $c->add(SfNewsArchivosPeer::ID_ARCHIVO,$id_file, Criteria::EQUAL);
    return self::doCount($c);
  }
  
  //Devuelve las noticias ordenadas por fecha
  public static function getNoticiasRecientes($limit = 3, $categoria = "", $lang) {
    $c = new Criteria();
    //Eliminamos la columnas de seleccion en caso de que esten definidas
    $c->clearSelectColumns();
    //Se Agregan las Columnas necesarias
    $c->addSelectColumn(self::ID_NEWS);
    $c->addSelectColumn(SfNewsI18nPeer::TITLE);
    $c->addSelectColumn(self::DATE);
    $c->addSelectColumn(SfNewsI18nPeer::SUMMARY);
    $c->addSelectColumn(self::IMAGE);
    $c->addSelectColumn(SfNewsI18nPeer::PERMALINK);    
    $c->add(self::STATUS, 1, Criteria::EQUAL);
    if($categoria)
    {
        $c->add(self::CATEGORY, $categoria, Criteria::EQUAL);
    }
    $c->addJoin(self::ID_NEWS, SfNewsI18nPeer::ID, Criteria::INNER_JOIN);
    $c->add(SfNewsI18nPeer::LANGUAGE, $lang, Criteria::EQUAL);
    $c->addDescendingOrderByColumn('date');
    $c->setLimit($limit);
    $rs = self::doSelectStmt($c);
    //Se recuperan los registros y se genera arreglo
    if ($rs->rowCount()==0) {
        return false;
    }
    while($res = $rs->fetch()) {
        $dato['id_news']    = $res['ID_NEWS'];
        $dato['title']      = $res['TITLE'];
        $dato['data']       = $res['DATE'];
        $dato['sumario']    = $res['SUMMARY'];
        $dato['image']      = $res['IMAGE'];
        $dato['permalink']  = $res['PERMALINK'];
        $datos[] = $dato;
    }
    if (!empty($datos)) {
        return $datos;
    }else {
        return false;
    }
    
  }
  //Devuelve las noticias ordenadas por fecha
  public static function getUltimasNoticias($limit = 2, $lang) {
    $c = new Criteria();
    //Eliminamos la columnas de seleccion en caso de que esten definidas
    $c->clearSelectColumns();
    //Se Agregan las Columnas necesarias
    $c->addSelectColumn(self::ID_NEWS);
    $c->addSelectColumn(SfNewsI18nPeer::TITLE);
    $c->addSelectColumn(self::DATE);
    $c->addSelectColumn(SfNewsI18nPeer::SUMMARY);
    $c->addSelectColumn(self::IMAGE);
    $c->addSelectColumn(SfNewsI18nPeer::PERMALINK);    
    
    
    $c->add(self::STATUS, 1, Criteria::EQUAL);
    $c->add(self::CATEGORY, 2 , Criteria::EQUAL);
    $c->addJoin(self::ID_NEWS, SfNewsI18nPeer::ID, Criteria::INNER_JOIN);
    $c->add(SfNewsI18nPeer::LANGUAGE, $lang, Criteria::EQUAL);
    $c->addDescendingOrderByColumn('date');
    $c->setLimit($limit);
    $rs = self::doSelectStmt($c);
    //Se recuperan los registros y se genera arreglo
    if ($rs->rowCount()==0) {
        return false;
    }
    while($res = $rs->fetch()) {
        $dato['id_news']    = $res['ID_NEWS'];
        $dato['title']      = $res['TITLE'];
        $dato['data']       = $res['DATE'];
        $dato['sumario']    = $res['SUMMARY'];
        $dato['image']      = $res['IMAGE'];
        $dato['permalink']  = $res['PERMALINK'];
        $datos[] = $dato;
    }
    if (!empty($datos)) {
        return $datos;
    }else {
        return false;
    }
  }
  
  //Devuelve las noticias ordenadas por fecha
  public static function getNoticiasRecientesHome($limit = 3) {
    $c = new Criteria();
    $c->add(self::STATUS, 1, Criteria::EQUAL);
    $c->add(self::CATEGORY, 0, Criteria::EQUAL);
    $c->add(self::IMAGE_PRINCIPAL, "", Criteria::NOT_EQUAL);
    $c->addDescendingOrderByColumn('date');
    $c->setLimit($limit);
    
    return self::doSelect($c);
  }
  
  public static function getNewsPagination($lang, $start, $limit, $busca = "")
  {
    $c = new Criteria();
    //Eliminamos la columnas de seleccion en caso de que esten definidas
    $c->clearSelectColumns();
    //Se Agregan las Columnas necesarias
    $c->addSelectColumn(self::ID_NEWS);
    $c->addSelectColumn(SfNewsI18nPeer::TITLE);
    $c->addSelectColumn(self::DATE);
    $c->addSelectColumn(SfNewsI18nPeer::BODY);
    $c->addSelectColumn(SfNewsI18nPeer::SUMMARY);
    $c->addSelectColumn(self::IMAGE);
    $c->addSelectColumn(SfNewsI18nPeer::PERMALINK);

    if($busca)
    {
        $criterio = $c->getNewCriterion(SfNewsI18nPeer::TITLE, '%'.$busca.'%', Criteria::LIKE);
        $criterio->addOr($c->getNewCriterion(SfNewsI18nPeer::BODY, '%'.$busca.'%', Criteria::LIKE));
        $c->add($criterio);
    }
    if ($start) {
        $c->setLimit($limit);
        $c->setOffset($start);
    } else {
        $c->setLimit($limit);
    }
    $c->add(self::STATUS, '1', Criteria::EQUAL);
    $c->addJoin(self::ID_NEWS, SfNewsI18nPeer::ID, Criteria::INNER_JOIN);
    $c->add(SfNewsI18nPeer::LANGUAGE, $lang, Criteria::EQUAL);
    $c->addDescendingOrderByColumn(self::DATE);
    $rs = self::doSelectStmt($c);
    //Se recuperan los registros y se genera arreglo
    if ($rs->rowCount()==0) {
        return false;
    }
    while($res = $rs->fetch()) {
        $dato['id_news']    = $res['ID_NEWS'];
        $dato['title']      = $res['TITLE'];
        $dato['data']       = $res['DATE'];
        $dato['body']       = $res['BODY'];
        $dato['sumario']    = $res['SUMMARY'];
        $dato['image']      = $res['IMAGE'];
        $dato['permalink']  = $res['PERMALINK'];
        $datos[] = $dato;
    }
    if (!empty($datos)) {
        return $datos;
    }else {
        return false;
    }
  }
  
  public static function getCount($lang, $busca = "")
  {
    $c = new Criteria();
    $c->add(self::STATUS, '1', Criteria::EQUAL);
    $c->addJoin(self::ID_NEWS, SfNewsI18nPeer::ID, Criteria::INNER_JOIN);
    $c->add(SfNewsI18nPeer::LANGUAGE, $lang, Criteria::EQUAL);
    if($busca)
    {
        $criterio = $c->getNewCriterion(SfNewsI18nPeer::TITLE, '%'.$busca.'%', Criteria::LIKE);
        $criterio->addOr($c->getNewCriterion(SfNewsI18nPeer::BODY, '%'.$busca.'%', Criteria::LIKE));
        $c->add($criterio);
    }
    return self::doCount($c);
  }
  
  /***
   * Show details for selected news
   */
  public static function selectNewsDetail($permalink, $lang)
  {
    $c = new Criteria();
    //Eliminamos la columnas de seleccion en caso de que esten definidas
    $c->clearSelectColumns();
    //Se Agregan las Columnas necesarias
    $c->addSelectColumn(self::ID_NEWS);
    $c->addSelectColumn(SfNewsI18nPeer::TITLE);
    $c->addSelectColumn(self::DATE);
    $c->addSelectColumn(SfNewsI18nPeer::BODY);
    $c->addSelectColumn(SfNewsI18nPeer::SUMMARY);
    $c->addSelectColumn(self::IMAGE);
    $c->addSelectColumn(SfNewsI18nPeer::PERMALINK);
    
    $c->addJoin(self::ID_NEWS, SfNewsI18nPeer::ID, Criteria::INNER_JOIN);
    $c->add(SfNewsI18nPeer::LANGUAGE, $lang, Criteria::EQUAL);    
    $c->add(SfNewsI18nPeer::PERMALINK, $permalink);
    $rs = self::doSelectStmt($c);
    //Se recuperan los registros y se genera arreglo
    if ($rs->rowCount()==0) {
        return false;
    }
    
    while($res = $rs->fetch()) {
        $dato['id_news']    = $res['ID_NEWS'];
        $dato['title']      = $res['TITLE'];
        $dato['data']       = $res['DATE'];
        $dato['body']       = $res['BODY'];
        $dato['sumario']    = $res['SUMMARY'];
        $dato['image']      = $res['IMAGE'];
        $dato['permalink']  = $res['PERMALINK'];
    }
    if (!empty($dato)) {
        return $dato;
    }else {
        return false;
    }
  }
} // SfNewsPeer
